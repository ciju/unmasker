// Generated by CoffeeScript 1.6.2
(function() {
  describe("Rectangle.IsColliding", function() {
    it("should return true if rectangles are colliding", function() {
      var r1, r2, s;

      r1 = new Rectangle(10, 10, 15, 15);
      r2 = new Rectangle(10, 10, 6, 6);
      s = new SelectionRect(15, 15, 5, 5);
      expect(r1.IsColliding(s)).toBe(true);
      return expect(r2.IsColliding(s)).toBe(true);
    });
    return it("should return false if rectangle is not colliding", function() {
      var r1, r2, r3, r4, r5, s;

      r1 = new Rectangle(0, 0, 5, 5);
      r2 = new Rectangle(15, 15, 5, 5);
      r3 = new Rectangle(15, 5, 5, 5);
      r4 = new Rectangle(5, 5, 5, 10);
      r5 = new Rectangle(10, 5, 5, 5);
      s = new SelectionRect(10, 10, 5, 5);
      expect(r1.IsColliding(s)).toBe(false);
      expect(r2.IsColliding(s)).toBe(false);
      expect(r3.IsColliding(s)).toBe(false);
      expect(r4.IsColliding(s)).toBe(false);
      return expect(r5.IsColliding(s)).toBe(false);
    });
  });

  describe("Rectangle.intersectingRect", function() {
    it("should give the intersection between the rectangle and selection area", function() {
      var r1, r2, r3, s;

      r1 = new Rectangle(10, 10, 15, 15);
      r2 = new Rectangle(10, 10, 6, 6);
      r3 = new Rectangle(19, 15, 5, 5);
      s = new SelectionRect(15, 15, 5, 5);
      expect(r1.intersectingRect(s)).toEqual([15, 15, 5, 5]);
      expect(r2.intersectingRect(s)).toEqual([15, 15, 1, 1]);
      return expect(r3.intersectingRect(s)).toEqual([19, 15, 1, 5]);
    });
    return it("should normalize if selection rect has -ve width/height");
  });

}).call(this);
